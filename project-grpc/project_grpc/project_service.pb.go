// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: project_service.proto

package project_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IndexMessage) Reset() {
	*x = IndexMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexMessage) ProtoMessage() {}

func (x *IndexMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexMessage.ProtoReflect.Descriptor instead.
func (*IndexMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{0}
}

type MenuMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid        int64          `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Title      string         `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Icon       string         `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	Url        string         `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	FilePath   string         `protobuf:"bytes,6,opt,name=filePath,proto3" json:"filePath,omitempty"`
	Params     string         `protobuf:"bytes,7,opt,name=params,proto3" json:"params,omitempty"`
	Node       string         `protobuf:"bytes,8,opt,name=node,proto3" json:"node,omitempty"`
	Sort       int32          `protobuf:"varint,9,opt,name=sort,proto3" json:"sort,omitempty"`
	Status     int32          `protobuf:"varint,10,opt,name=status,proto3" json:"status,omitempty"`
	CreateBy   int64          `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	IsInner    int32          `protobuf:"varint,12,opt,name=isInner,proto3" json:"isInner,omitempty"`
	Values     string         `protobuf:"bytes,13,opt,name=values,proto3" json:"values,omitempty"`
	ShowSlider int32          `protobuf:"varint,14,opt,name=showSlider,proto3" json:"showSlider,omitempty"`
	StatusText string         `protobuf:"bytes,15,opt,name=statusText,proto3" json:"statusText,omitempty"`
	InnerText  string         `protobuf:"bytes,16,opt,name=innerText,proto3" json:"innerText,omitempty"`
	FullUrl    string         `protobuf:"bytes,17,opt,name=fullUrl,proto3" json:"fullUrl,omitempty"`
	Children   []*MenuMessage `protobuf:"bytes,18,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *MenuMessage) Reset() {
	*x = MenuMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuMessage) ProtoMessage() {}

func (x *MenuMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuMessage.ProtoReflect.Descriptor instead.
func (*MenuMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{1}
}

func (x *MenuMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuMessage) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *MenuMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MenuMessage) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuMessage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MenuMessage) GetFilePath() string {
	if x != nil {
		return x.FilePath
	}
	return ""
}

func (x *MenuMessage) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *MenuMessage) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *MenuMessage) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuMessage) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *MenuMessage) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *MenuMessage) GetIsInner() int32 {
	if x != nil {
		return x.IsInner
	}
	return 0
}

func (x *MenuMessage) GetValues() string {
	if x != nil {
		return x.Values
	}
	return ""
}

func (x *MenuMessage) GetShowSlider() int32 {
	if x != nil {
		return x.ShowSlider
	}
	return 0
}

func (x *MenuMessage) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *MenuMessage) GetInnerText() string {
	if x != nil {
		return x.InnerText
	}
	return ""
}

func (x *MenuMessage) GetFullUrl() string {
	if x != nil {
		return x.FullUrl
	}
	return ""
}

func (x *MenuMessage) GetChildren() []*MenuMessage {
	if x != nil {
		return x.Children
	}
	return nil
}

type IndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus []*MenuMessage `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *IndexResponse) Reset() {
	*x = IndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexResponse) ProtoMessage() {}

func (x *IndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexResponse.ProtoReflect.Descriptor instead.
func (*IndexResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{2}
}

func (x *IndexResponse) GetMenus() []*MenuMessage {
	if x != nil {
		return x.Menus
	}
	return nil
}

// 疑问1：TemplateCode在project的model里面是int类型，这里是string类型，使用copier.copy()还会起作用吗？
type ProjectMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Cover              string  `protobuf:"bytes,2,opt,name=Cover,proto3" json:"Cover,omitempty"`
	Name               string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description        string  `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	AccessControlType  string  `protobuf:"bytes,5,opt,name=AccessControlType,proto3" json:"AccessControlType,omitempty"`
	WhiteList          string  `protobuf:"bytes,6,opt,name=WhiteList,proto3" json:"WhiteList,omitempty"`
	Order              int32   `protobuf:"varint,7,opt,name=Order,proto3" json:"Order,omitempty"`
	Deleted            int32   `protobuf:"varint,8,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
	TemplateCode       string  `protobuf:"bytes,9,opt,name=TemplateCode,proto3" json:"TemplateCode,omitempty"`
	Schedule           float64 `protobuf:"fixed64,10,opt,name=Schedule,proto3" json:"Schedule,omitempty"`
	CreateTime         string  `protobuf:"bytes,11,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	OrganizationCode   string  `protobuf:"bytes,12,opt,name=OrganizationCode,proto3" json:"OrganizationCode,omitempty"`
	DeletedTime        string  `protobuf:"bytes,13,opt,name=DeletedTime,proto3" json:"DeletedTime,omitempty"`
	Private            int32   `protobuf:"varint,14,opt,name=Private,proto3" json:"Private,omitempty"`
	Prefix             string  `protobuf:"bytes,15,opt,name=Prefix,proto3" json:"Prefix,omitempty"`
	OpenPrefix         int32   `protobuf:"varint,16,opt,name=OpenPrefix,proto3" json:"OpenPrefix,omitempty"`
	Archive            int32   `protobuf:"varint,17,opt,name=Archive,proto3" json:"Archive,omitempty"`
	ArchiveTime        int64   `protobuf:"varint,18,opt,name=ArchiveTime,proto3" json:"ArchiveTime,omitempty"`
	OpenBeginTime      int32   `protobuf:"varint,19,opt,name=OpenBeginTime,proto3" json:"OpenBeginTime,omitempty"`
	OpenTaskPrivate    int32   `protobuf:"varint,20,opt,name=OpenTaskPrivate,proto3" json:"OpenTaskPrivate,omitempty"`
	TaskBoardTheme     string  `protobuf:"bytes,21,opt,name=TaskBoardTheme,proto3" json:"TaskBoardTheme,omitempty"`
	BeginTime          string  `protobuf:"bytes,22,opt,name=BeginTime,proto3" json:"BeginTime,omitempty"`
	EndTime            string  `protobuf:"bytes,23,opt,name=EndTime,proto3" json:"EndTime,omitempty"`
	AutoUpdateSchedule int32   `protobuf:"varint,24,opt,name=AutoUpdateSchedule,proto3" json:"AutoUpdateSchedule,omitempty"`
	ProjectCode        int64   `protobuf:"varint,25,opt,name=ProjectCode,proto3" json:"ProjectCode,omitempty"`
	MemberCode         int64   `protobuf:"varint,26,opt,name=MemberCode,proto3" json:"MemberCode,omitempty"`
	JoinTime           string  `protobuf:"bytes,27,opt,name=JoinTime,proto3" json:"JoinTime,omitempty"`
	IsOwner            int64   `protobuf:"varint,28,opt,name=IsOwner,proto3" json:"IsOwner,omitempty"`
	Authorize          string  `protobuf:"bytes,29,opt,name=Authorize,proto3" json:"Authorize,omitempty"`
	Code               string  `protobuf:"bytes,30,opt,name=code,proto3" json:"code,omitempty"`
	OwnerName          string  `protobuf:"bytes,31,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	Collected          int32   `protobuf:"varint,32,opt,name=collected,proto3" json:"collected,omitempty"`
}

func (x *ProjectMessage) Reset() {
	*x = ProjectMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMessage) ProtoMessage() {}

func (x *ProjectMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMessage.ProtoReflect.Descriptor instead.
func (*ProjectMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectMessage) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectMessage) GetAccessControlType() string {
	if x != nil {
		return x.AccessControlType
	}
	return ""
}

func (x *ProjectMessage) GetWhiteList() string {
	if x != nil {
		return x.WhiteList
	}
	return ""
}

func (x *ProjectMessage) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProjectMessage) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *ProjectMessage) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *ProjectMessage) GetSchedule() float64 {
	if x != nil {
		return x.Schedule
	}
	return 0
}

func (x *ProjectMessage) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectMessage) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *ProjectMessage) GetDeletedTime() string {
	if x != nil {
		return x.DeletedTime
	}
	return ""
}

func (x *ProjectMessage) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *ProjectMessage) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ProjectMessage) GetOpenPrefix() int32 {
	if x != nil {
		return x.OpenPrefix
	}
	return 0
}

func (x *ProjectMessage) GetArchive() int32 {
	if x != nil {
		return x.Archive
	}
	return 0
}

func (x *ProjectMessage) GetArchiveTime() int64 {
	if x != nil {
		return x.ArchiveTime
	}
	return 0
}

func (x *ProjectMessage) GetOpenBeginTime() int32 {
	if x != nil {
		return x.OpenBeginTime
	}
	return 0
}

func (x *ProjectMessage) GetOpenTaskPrivate() int32 {
	if x != nil {
		return x.OpenTaskPrivate
	}
	return 0
}

func (x *ProjectMessage) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *ProjectMessage) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *ProjectMessage) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ProjectMessage) GetAutoUpdateSchedule() int32 {
	if x != nil {
		return x.AutoUpdateSchedule
	}
	return 0
}

func (x *ProjectMessage) GetProjectCode() int64 {
	if x != nil {
		return x.ProjectCode
	}
	return 0
}

func (x *ProjectMessage) GetMemberCode() int64 {
	if x != nil {
		return x.MemberCode
	}
	return 0
}

func (x *ProjectMessage) GetJoinTime() string {
	if x != nil {
		return x.JoinTime
	}
	return ""
}

func (x *ProjectMessage) GetIsOwner() int64 {
	if x != nil {
		return x.IsOwner
	}
	return 0
}

func (x *ProjectMessage) GetAuthorize() string {
	if x != nil {
		return x.Authorize
	}
	return ""
}

func (x *ProjectMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProjectMessage) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ProjectMessage) GetCollected() int32 {
	if x != nil {
		return x.Collected
	}
	return 0
}

type ProjectDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cover              string  `protobuf:"bytes,2,opt,name=cover,proto3" json:"cover,omitempty"`
	Name               string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description        string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AccessControlType  string  `protobuf:"bytes,5,opt,name=accessControlType,proto3" json:"accessControlType,omitempty"`
	WhiteList          string  `protobuf:"bytes,6,opt,name=whiteList,proto3" json:"whiteList,omitempty"`
	Order              int32   `protobuf:"varint,7,opt,name=order,proto3" json:"order,omitempty"`
	Deleted            int32   `protobuf:"varint,8,opt,name=deleted,proto3" json:"deleted,omitempty"`
	TemplateCode       string  `protobuf:"bytes,9,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	Schedule           float64 `protobuf:"fixed64,10,opt,name=schedule,proto3" json:"schedule,omitempty"`
	CreateTime         string  `protobuf:"bytes,11,opt,name=createTime,proto3" json:"createTime,omitempty"`
	OrganizationCode   string  `protobuf:"bytes,12,opt,name=organizationCode,proto3" json:"organizationCode,omitempty"`
	DeletedTime        string  `protobuf:"bytes,13,opt,name=deletedTime,proto3" json:"deletedTime,omitempty"`
	Private            int32   `protobuf:"varint,14,opt,name=private,proto3" json:"private,omitempty"`
	Prefix             string  `protobuf:"bytes,15,opt,name=prefix,proto3" json:"prefix,omitempty"`
	OpenPrefix         int32   `protobuf:"varint,16,opt,name=openPrefix,proto3" json:"openPrefix,omitempty"`
	Archive            int32   `protobuf:"varint,17,opt,name=archive,proto3" json:"archive,omitempty"`
	ArchiveTime        int64   `protobuf:"varint,18,opt,name=archiveTime,proto3" json:"archiveTime,omitempty"`
	OpenBeginTime      int32   `protobuf:"varint,19,opt,name=openBeginTime,proto3" json:"openBeginTime,omitempty"`
	OpenTaskPrivate    int32   `protobuf:"varint,20,opt,name=openTaskPrivate,proto3" json:"openTaskPrivate,omitempty"`
	TaskBoardTheme     string  `protobuf:"bytes,21,opt,name=taskBoardTheme,proto3" json:"taskBoardTheme,omitempty"`
	BeginTime          string  `protobuf:"bytes,22,opt,name=beginTime,proto3" json:"beginTime,omitempty"`
	EndTime            string  `protobuf:"bytes,23,opt,name=endTime,proto3" json:"endTime,omitempty"`
	AutoUpdateSchedule int32   `protobuf:"varint,24,opt,name=autoUpdateSchedule,proto3" json:"autoUpdateSchedule,omitempty"`
	Code               string  `protobuf:"bytes,25,opt,name=code,proto3" json:"code,omitempty"`
	OwnerName          string  `protobuf:"bytes,26,opt,name=ownerName,proto3" json:"ownerName,omitempty"`
	Collected          int32   `protobuf:"varint,27,opt,name=collected,proto3" json:"collected,omitempty"`
	OwnerAvatar        string  `protobuf:"bytes,28,opt,name=ownerAvatar,proto3" json:"ownerAvatar,omitempty"`
}

func (x *ProjectDetailResponse) Reset() {
	*x = ProjectDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDetailResponse) ProtoMessage() {}

func (x *ProjectDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDetailResponse.ProtoReflect.Descriptor instead.
func (*ProjectDetailResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectDetailResponse) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectDetailResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectDetailResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectDetailResponse) GetAccessControlType() string {
	if x != nil {
		return x.AccessControlType
	}
	return ""
}

func (x *ProjectDetailResponse) GetWhiteList() string {
	if x != nil {
		return x.WhiteList
	}
	return ""
}

func (x *ProjectDetailResponse) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProjectDetailResponse) GetDeleted() int32 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *ProjectDetailResponse) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *ProjectDetailResponse) GetSchedule() float64 {
	if x != nil {
		return x.Schedule
	}
	return 0
}

func (x *ProjectDetailResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectDetailResponse) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *ProjectDetailResponse) GetDeletedTime() string {
	if x != nil {
		return x.DeletedTime
	}
	return ""
}

func (x *ProjectDetailResponse) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *ProjectDetailResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ProjectDetailResponse) GetOpenPrefix() int32 {
	if x != nil {
		return x.OpenPrefix
	}
	return 0
}

func (x *ProjectDetailResponse) GetArchive() int32 {
	if x != nil {
		return x.Archive
	}
	return 0
}

func (x *ProjectDetailResponse) GetArchiveTime() int64 {
	if x != nil {
		return x.ArchiveTime
	}
	return 0
}

func (x *ProjectDetailResponse) GetOpenBeginTime() int32 {
	if x != nil {
		return x.OpenBeginTime
	}
	return 0
}

func (x *ProjectDetailResponse) GetOpenTaskPrivate() int32 {
	if x != nil {
		return x.OpenTaskPrivate
	}
	return 0
}

func (x *ProjectDetailResponse) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *ProjectDetailResponse) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *ProjectDetailResponse) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *ProjectDetailResponse) GetAutoUpdateSchedule() int32 {
	if x != nil {
		return x.AutoUpdateSchedule
	}
	return 0
}

func (x *ProjectDetailResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProjectDetailResponse) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *ProjectDetailResponse) GetCollected() int32 {
	if x != nil {
		return x.Collected
	}
	return 0
}

func (x *ProjectDetailResponse) GetOwnerAvatar() string {
	if x != nil {
		return x.OwnerAvatar
	}
	return ""
}

type ProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pm    []*ProjectMessage `protobuf:"bytes,1,rep,name=pm,proto3" json:"pm,omitempty"`
	Total int64             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ProjectResponse) Reset() {
	*x = ProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectResponse) ProtoMessage() {}

func (x *ProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectResponse.ProtoReflect.Descriptor instead.
func (*ProjectResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{5}
}

func (x *ProjectResponse) GetPm() []*ProjectMessage {
	if x != nil {
		return x.Pm
	}
	return nil
}

func (x *ProjectResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SaveProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Cover            string `protobuf:"bytes,2,opt,name=Cover,proto3" json:"Cover,omitempty"`
	Name             string `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description      string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Code             string `protobuf:"bytes,5,opt,name=Code,proto3" json:"Code,omitempty"`
	CreateTime       string `protobuf:"bytes,6,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	TaskBoardTheme   string `protobuf:"bytes,7,opt,name=TaskBoardTheme,proto3" json:"TaskBoardTheme,omitempty"`
	OrganizationCode string `protobuf:"bytes,8,opt,name=OrganizationCode,proto3" json:"OrganizationCode,omitempty"`
}

func (x *SaveProjectResponse) Reset() {
	*x = SaveProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveProjectResponse) ProtoMessage() {}

func (x *SaveProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveProjectResponse.ProtoReflect.Descriptor instead.
func (*SaveProjectResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{6}
}

func (x *SaveProjectResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SaveProjectResponse) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *SaveProjectResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SaveProjectResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SaveProjectResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SaveProjectResponse) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *SaveProjectResponse) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *SaveProjectResponse) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

type ProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId         int64  `protobuf:"varint,1,opt,name=memberId,proto3" json:"memberId,omitempty"`
	MemberName       string `protobuf:"bytes,2,opt,name=memberName,proto3" json:"memberName,omitempty"`
	Page             int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize         int64  `protobuf:"varint,4,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	SelectBy         string `protobuf:"bytes,5,opt,name=SelectBy,proto3" json:"SelectBy,omitempty"`
	OrganizationCode string `protobuf:"bytes,6,opt,name=organizationCode,proto3" json:"organizationCode,omitempty"`
	ViewType         int32  `protobuf:"varint,7,opt,name=viewType,proto3" json:"viewType,omitempty"`
	Name             string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	TemplateCode     string `protobuf:"bytes,9,opt,name=templateCode,proto3" json:"templateCode,omitempty"`
	Description      string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	Id               int64  `protobuf:"varint,11,opt,name=id,proto3" json:"id,omitempty"`
	ProjectCode      string `protobuf:"bytes,12,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Deleted          bool   `protobuf:"varint,13,opt,name=deleted,proto3" json:"deleted,omitempty"`
	CollectType      string `protobuf:"bytes,14,opt,name=collectType,proto3" json:"collectType,omitempty"`
	TaskCode         string `protobuf:"bytes,15,opt,name=taskCode,proto3" json:"taskCode,omitempty"`
	Mobile           string `protobuf:"bytes,16,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email            string `protobuf:"bytes,17,opt,name=email,proto3" json:"email,omitempty"`
	Avatar           string `protobuf:"bytes,18,opt,name=avatar,proto3" json:"avatar,omitempty"`
}

func (x *ProjectRequest) Reset() {
	*x = ProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRequest) ProtoMessage() {}

func (x *ProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRequest.ProtoReflect.Descriptor instead.
func (*ProjectRequest) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{7}
}

func (x *ProjectRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ProjectRequest) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *ProjectRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ProjectRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProjectRequest) GetSelectBy() string {
	if x != nil {
		return x.SelectBy
	}
	return ""
}

func (x *ProjectRequest) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *ProjectRequest) GetViewType() int32 {
	if x != nil {
		return x.ViewType
	}
	return 0
}

func (x *ProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectRequest) GetTemplateCode() string {
	if x != nil {
		return x.TemplateCode
	}
	return ""
}

func (x *ProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectRequest) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *ProjectRequest) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *ProjectRequest) GetCollectType() string {
	if x != nil {
		return x.CollectType
	}
	return ""
}

func (x *ProjectRequest) GetTaskCode() string {
	if x != nil {
		return x.TaskCode
	}
	return ""
}

func (x *ProjectRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ProjectRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ProjectRequest) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

type ProjectTemplateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Sort             int32         `protobuf:"varint,4,opt,name=sort,proto3" json:"sort,omitempty"`
	CreateTime       string        `protobuf:"bytes,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	OrganizationCode string        `protobuf:"bytes,6,opt,name=organizationCode,proto3" json:"organizationCode,omitempty"`
	Cover            string        `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	MemberCode       string        `protobuf:"bytes,8,opt,name=memberCode,proto3" json:"memberCode,omitempty"`
	IsSystem         int32         `protobuf:"varint,9,opt,name=isSystem,proto3" json:"isSystem,omitempty"`
	TaskStages       []*TaskStages `protobuf:"bytes,10,rep,name=taskStages,proto3" json:"taskStages,omitempty"`
	Code             string        `protobuf:"bytes,11,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ProjectTemplateMessage) Reset() {
	*x = ProjectTemplateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectTemplateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTemplateMessage) ProtoMessage() {}

func (x *ProjectTemplateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTemplateMessage.ProtoReflect.Descriptor instead.
func (*ProjectTemplateMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectTemplateMessage) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectTemplateMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectTemplateMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectTemplateMessage) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProjectTemplateMessage) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectTemplateMessage) GetOrganizationCode() string {
	if x != nil {
		return x.OrganizationCode
	}
	return ""
}

func (x *ProjectTemplateMessage) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectTemplateMessage) GetMemberCode() string {
	if x != nil {
		return x.MemberCode
	}
	return ""
}

func (x *ProjectTemplateMessage) GetIsSystem() int32 {
	if x != nil {
		return x.IsSystem
	}
	return 0
}

func (x *ProjectTemplateMessage) GetTaskStages() []*TaskStages {
	if x != nil {
		return x.TaskStages
	}
	return nil
}

func (x *ProjectTemplateMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type TaskStages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TaskStages) Reset() {
	*x = TaskStages{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskStages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskStages) ProtoMessage() {}

func (x *TaskStages) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskStages.ProtoReflect.Descriptor instead.
func (*TaskStages) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{9}
}

func (x *TaskStages) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProjectTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ptm   []*ProjectTemplateMessage `protobuf:"bytes,1,rep,name=ptm,proto3" json:"ptm,omitempty"`
	Total int64                     `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
}

func (x *ProjectTemplateResponse) Reset() {
	*x = ProjectTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectTemplateResponse) ProtoMessage() {}

func (x *ProjectTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectTemplateResponse.ProtoReflect.Descriptor instead.
func (*ProjectTemplateResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{10}
}

func (x *ProjectTemplateResponse) GetPtm() []*ProjectTemplateMessage {
	if x != nil {
		return x.Ptm
	}
	return nil
}

func (x *ProjectTemplateResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CollectProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CollectProjectResponse) Reset() {
	*x = CollectProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectProjectResponse) ProtoMessage() {}

func (x *CollectProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectProjectResponse.ProtoReflect.Descriptor instead.
func (*CollectProjectResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{11}
}

type ProjectEditRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectCode        string  `protobuf:"bytes,1,opt,name=projectCode,proto3" json:"projectCode,omitempty"`
	Cover              string  `protobuf:"bytes,2,opt,name=Cover,proto3" json:"Cover,omitempty"`
	Name               string  `protobuf:"bytes,3,opt,name=Name,proto3" json:"Name,omitempty"`
	Description        string  `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Schedule           float64 `protobuf:"fixed64,5,opt,name=Schedule,proto3" json:"Schedule,omitempty"`
	Private            int32   `protobuf:"varint,6,opt,name=Private,proto3" json:"Private,omitempty"`
	Prefix             string  `protobuf:"bytes,7,opt,name=Prefix,proto3" json:"Prefix,omitempty"`
	OpenPrefix         int32   `protobuf:"varint,8,opt,name=OpenPrefix,proto3" json:"OpenPrefix,omitempty"`
	OpenBeginTime      int32   `protobuf:"varint,9,opt,name=OpenBeginTime,proto3" json:"OpenBeginTime,omitempty"`
	OpenTaskPrivate    int32   `protobuf:"varint,10,opt,name=OpenTaskPrivate,proto3" json:"OpenTaskPrivate,omitempty"`
	TaskBoardTheme     string  `protobuf:"bytes,11,opt,name=TaskBoardTheme,proto3" json:"TaskBoardTheme,omitempty"`
	AutoUpdateSchedule int32   `protobuf:"varint,12,opt,name=AutoUpdateSchedule,proto3" json:"AutoUpdateSchedule,omitempty"`
	MemberCode         int64   `protobuf:"varint,13,opt,name=MemberCode,proto3" json:"MemberCode,omitempty"`
}

func (x *ProjectEditRequest) Reset() {
	*x = ProjectEditRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectEditRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectEditRequest) ProtoMessage() {}

func (x *ProjectEditRequest) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectEditRequest.ProtoReflect.Descriptor instead.
func (*ProjectEditRequest) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectEditRequest) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *ProjectEditRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *ProjectEditRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectEditRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectEditRequest) GetSchedule() float64 {
	if x != nil {
		return x.Schedule
	}
	return 0
}

func (x *ProjectEditRequest) GetPrivate() int32 {
	if x != nil {
		return x.Private
	}
	return 0
}

func (x *ProjectEditRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ProjectEditRequest) GetOpenPrefix() int32 {
	if x != nil {
		return x.OpenPrefix
	}
	return 0
}

func (x *ProjectEditRequest) GetOpenBeginTime() int32 {
	if x != nil {
		return x.OpenBeginTime
	}
	return 0
}

func (x *ProjectEditRequest) GetOpenTaskPrivate() int32 {
	if x != nil {
		return x.OpenTaskPrivate
	}
	return 0
}

func (x *ProjectEditRequest) GetTaskBoardTheme() string {
	if x != nil {
		return x.TaskBoardTheme
	}
	return ""
}

func (x *ProjectEditRequest) GetAutoUpdateSchedule() int32 {
	if x != nil {
		return x.AutoUpdateSchedule
	}
	return 0
}

func (x *ProjectEditRequest) GetMemberCode() int64 {
	if x != nil {
		return x.MemberCode
	}
	return 0
}

type ProjectEditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectEditResponse) Reset() {
	*x = ProjectEditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectEditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectEditResponse) ProtoMessage() {}

func (x *ProjectEditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectEditResponse.ProtoReflect.Descriptor instead.
func (*ProjectEditResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{13}
}

type ProjectLogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content      string `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	Remark       string `protobuf:"bytes,2,opt,name=Remark,proto3" json:"Remark,omitempty"`
	CreateTime   string `protobuf:"bytes,3,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
	SourceCode   string `protobuf:"bytes,4,opt,name=SourceCode,proto3" json:"SourceCode,omitempty"`
	IsComment    int32  `protobuf:"varint,5,opt,name=IsComment,proto3" json:"IsComment,omitempty"`
	ProjectCode  string `protobuf:"bytes,6,opt,name=ProjectCode,proto3" json:"ProjectCode,omitempty"`
	ProjectName  string `protobuf:"bytes,7,opt,name=ProjectName,proto3" json:"ProjectName,omitempty"`
	MemberAvatar string `protobuf:"bytes,8,opt,name=MemberAvatar,proto3" json:"MemberAvatar,omitempty"`
	MemberName   string `protobuf:"bytes,9,opt,name=MemberName,proto3" json:"MemberName,omitempty"`
	TaskName     string `protobuf:"bytes,10,opt,name=TaskName,proto3" json:"TaskName,omitempty"`
}

func (x *ProjectLogMessage) Reset() {
	*x = ProjectLogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectLogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectLogMessage) ProtoMessage() {}

func (x *ProjectLogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectLogMessage.ProtoReflect.Descriptor instead.
func (*ProjectLogMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{14}
}

func (x *ProjectLogMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ProjectLogMessage) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ProjectLogMessage) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ProjectLogMessage) GetSourceCode() string {
	if x != nil {
		return x.SourceCode
	}
	return ""
}

func (x *ProjectLogMessage) GetIsComment() int32 {
	if x != nil {
		return x.IsComment
	}
	return 0
}

func (x *ProjectLogMessage) GetProjectCode() string {
	if x != nil {
		return x.ProjectCode
	}
	return ""
}

func (x *ProjectLogMessage) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *ProjectLogMessage) GetMemberAvatar() string {
	if x != nil {
		return x.MemberAvatar
	}
	return ""
}

func (x *ProjectLogMessage) GetMemberName() string {
	if x != nil {
		return x.MemberName
	}
	return ""
}

func (x *ProjectLogMessage) GetTaskName() string {
	if x != nil {
		return x.TaskName
	}
	return ""
}

type ProjectLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List  []*ProjectLogMessage `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Total int64                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ProjectLogResponse) Reset() {
	*x = ProjectLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectLogResponse) ProtoMessage() {}

func (x *ProjectLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectLogResponse.ProtoReflect.Descriptor instead.
func (*ProjectLogResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{15}
}

func (x *ProjectLogResponse) GetList() []*ProjectLogMessage {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ProjectLogResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CopyProjectTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CopyProjectTemplateResponse) Reset() {
	*x = CopyProjectTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyProjectTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyProjectTemplateResponse) ProtoMessage() {}

func (x *CopyProjectTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyProjectTemplateResponse.ProtoReflect.Descriptor instead.
func (*CopyProjectTemplateResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{16}
}

type ProjectNodeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Node     string                `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Title    string                `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	PNode    string                `protobuf:"bytes,4,opt,name=pNode,proto3" json:"pNode,omitempty"`
	IsLogin  int32                 `protobuf:"varint,5,opt,name=isLogin,proto3" json:"isLogin,omitempty"`
	IsMenu   int32                 `protobuf:"varint,6,opt,name=isMenu,proto3" json:"isMenu,omitempty"`
	IsAuth   int32                 `protobuf:"varint,7,opt,name=isAuth,proto3" json:"isAuth,omitempty"`
	Children []*ProjectNodeMessage `protobuf:"bytes,8,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *ProjectNodeMessage) Reset() {
	*x = ProjectNodeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectNodeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectNodeMessage) ProtoMessage() {}

func (x *ProjectNodeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectNodeMessage.ProtoReflect.Descriptor instead.
func (*ProjectNodeMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{17}
}

func (x *ProjectNodeMessage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProjectNodeMessage) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *ProjectNodeMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProjectNodeMessage) GetPNode() string {
	if x != nil {
		return x.PNode
	}
	return ""
}

func (x *ProjectNodeMessage) GetIsLogin() int32 {
	if x != nil {
		return x.IsLogin
	}
	return 0
}

func (x *ProjectNodeMessage) GetIsMenu() int32 {
	if x != nil {
		return x.IsMenu
	}
	return 0
}

func (x *ProjectNodeMessage) GetIsAuth() int32 {
	if x != nil {
		return x.IsAuth
	}
	return 0
}

func (x *ProjectNodeMessage) GetChildren() []*ProjectNodeMessage {
	if x != nil {
		return x.Children
	}
	return nil
}

type ProjectNodeResponseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*ProjectNodeMessage `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ProjectNodeResponseMessage) Reset() {
	*x = ProjectNodeResponseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectNodeResponseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectNodeResponseMessage) ProtoMessage() {}

func (x *ProjectNodeResponseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectNodeResponseMessage.ProtoReflect.Descriptor instead.
func (*ProjectNodeResponseMessage) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{18}
}

func (x *ProjectNodeResponseMessage) GetNodes() []*ProjectNodeMessage {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type FindProjectByMemberIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project  *ProjectMessage `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	IsMember bool            `protobuf:"varint,2,opt,name=isMember,proto3" json:"isMember,omitempty"`
	IsOwner  bool            `protobuf:"varint,3,opt,name=isOwner,proto3" json:"isOwner,omitempty"`
}

func (x *FindProjectByMemberIdResponse) Reset() {
	*x = FindProjectByMemberIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_project_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindProjectByMemberIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindProjectByMemberIdResponse) ProtoMessage() {}

func (x *FindProjectByMemberIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_project_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindProjectByMemberIdResponse.ProtoReflect.Descriptor instead.
func (*FindProjectByMemberIdResponse) Descriptor() ([]byte, []int) {
	return file_project_service_proto_rawDescGZIP(), []int{19}
}

func (x *FindProjectByMemberIdResponse) GetProject() *ProjectMessage {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *FindProjectByMemberIdResponse) GetIsMember() bool {
	if x != nil {
		return x.IsMember
	}
	return false
}

func (x *FindProjectByMemberIdResponse) GetIsOwner() bool {
	if x != nil {
		return x.IsOwner
	}
	return false
}

var File_project_service_proto protoreflect.FileDescriptor

var file_project_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e,
	0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xd5,
	0x03, 0x0a, 0x0b, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69,
	0x73, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x66, 0x75, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66,
	0x75, 0x6c, 0x6c, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x39, 0x0a, 0x0d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x65, 0x6e, 0x75, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75,
	0x73, 0x22, 0xea, 0x07, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x57, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x18, 0x0a, 0x07,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x6e,
	0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28,
	0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4a, 0x6f,
	0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x73, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x49, 0x73, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0xed,
	0x06, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x68, 0x69, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61,
	0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x6f, 0x70, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6f, 0x70, 0x65,
	0x6e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x74, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x61, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x4e,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x25, 0x0a, 0x02, 0x70, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x02, 0x70, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf9,
	0x01, 0x0a, 0x13, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x6f,
	0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x54, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8a, 0x04, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0xd7, 0x02, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x61,
	0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x20, 0x0a, 0x0a, 0x54, 0x61, 0x73, 0x6b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x60, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x03, 0x70, 0x74, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x70, 0x74, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x18, 0x0a, 0x16, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xb8, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x72,
	0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4f, 0x70, 0x65, 0x6e, 0x42,
	0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x6e,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x4f, 0x70, 0x65, 0x6e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x6f, 0x61, 0x72, 0x64, 0x54,
	0x68, 0x65, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x54, 0x61, 0x73, 0x6b,
	0x42, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x41, 0x75,
	0x74, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xc7, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x49, 0x73,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c,
	0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xe5, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x73,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69,
	0x73, 0x41, 0x75, 0x74, 0x68, 0x12, 0x35, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x4d, 0x0a, 0x1a,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x6e, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x1d,
	0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x32, 0x89, 0x07, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x15, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x11, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x13, 0x52, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x50, 0x69, 0x64,
	0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4e,
	0x0a, 0x14, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0b, 0x45, 0x64, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67,
	0x42, 0x79, 0x53, 0x65, 0x6c, 0x66, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x52, 0x0a, 0x13, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x10, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4d, 0x69,
	0x64, 0x12, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x24, 0x5a, 0x22, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_project_service_proto_rawDescOnce sync.Once
	file_project_service_proto_rawDescData = file_project_service_proto_rawDesc
)

func file_project_service_proto_rawDescGZIP() []byte {
	file_project_service_proto_rawDescOnce.Do(func() {
		file_project_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_project_service_proto_rawDescData)
	})
	return file_project_service_proto_rawDescData
}

var file_project_service_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_project_service_proto_goTypes = []interface{}{
	(*IndexMessage)(nil),                  // 0: proto.IndexMessage
	(*MenuMessage)(nil),                   // 1: proto.MenuMessage
	(*IndexResponse)(nil),                 // 2: proto.IndexResponse
	(*ProjectMessage)(nil),                // 3: proto.ProjectMessage
	(*ProjectDetailResponse)(nil),         // 4: proto.ProjectDetailResponse
	(*ProjectResponse)(nil),               // 5: proto.ProjectResponse
	(*SaveProjectResponse)(nil),           // 6: proto.SaveProjectResponse
	(*ProjectRequest)(nil),                // 7: proto.ProjectRequest
	(*ProjectTemplateMessage)(nil),        // 8: proto.ProjectTemplateMessage
	(*TaskStages)(nil),                    // 9: proto.TaskStages
	(*ProjectTemplateResponse)(nil),       // 10: proto.ProjectTemplateResponse
	(*CollectProjectResponse)(nil),        // 11: proto.CollectProjectResponse
	(*ProjectEditRequest)(nil),            // 12: proto.ProjectEditRequest
	(*ProjectEditResponse)(nil),           // 13: proto.ProjectEditResponse
	(*ProjectLogMessage)(nil),             // 14: proto.ProjectLogMessage
	(*ProjectLogResponse)(nil),            // 15: proto.ProjectLogResponse
	(*CopyProjectTemplateResponse)(nil),   // 16: proto.CopyProjectTemplateResponse
	(*ProjectNodeMessage)(nil),            // 17: proto.ProjectNodeMessage
	(*ProjectNodeResponseMessage)(nil),    // 18: proto.ProjectNodeResponseMessage
	(*FindProjectByMemberIdResponse)(nil), // 19: proto.FindProjectByMemberIdResponse
}
var file_project_service_proto_depIdxs = []int32{
	1,  // 0: proto.MenuMessage.children:type_name -> proto.MenuMessage
	1,  // 1: proto.IndexResponse.menus:type_name -> proto.MenuMessage
	3,  // 2: proto.ProjectResponse.pm:type_name -> proto.ProjectMessage
	9,  // 3: proto.ProjectTemplateMessage.taskStages:type_name -> proto.TaskStages
	8,  // 4: proto.ProjectTemplateResponse.ptm:type_name -> proto.ProjectTemplateMessage
	14, // 5: proto.ProjectLogResponse.list:type_name -> proto.ProjectLogMessage
	17, // 6: proto.ProjectNodeMessage.children:type_name -> proto.ProjectNodeMessage
	17, // 7: proto.ProjectNodeResponseMessage.nodes:type_name -> proto.ProjectNodeMessage
	3,  // 8: proto.FindProjectByMemberIdResponse.project:type_name -> proto.ProjectMessage
	0,  // 9: proto.ProjectService.Index:input_type -> proto.IndexMessage
	7,  // 10: proto.ProjectService.FindProjectByMemberId:input_type -> proto.ProjectRequest
	7,  // 11: proto.ProjectService.FindProjectTemplate:input_type -> proto.ProjectRequest
	7,  // 12: proto.ProjectService.CreateProject:input_type -> proto.ProjectRequest
	7,  // 13: proto.ProjectService.FindProjectDetail:input_type -> proto.ProjectRequest
	7,  // 14: proto.ProjectService.RecycleProjectByPid:input_type -> proto.ProjectRequest
	7,  // 15: proto.ProjectService.CollectProjectByType:input_type -> proto.ProjectRequest
	12, // 16: proto.ProjectService.EditProject:input_type -> proto.ProjectEditRequest
	7,  // 17: proto.ProjectService.GetLogBySelfProject:input_type -> proto.ProjectRequest
	7,  // 18: proto.ProjectService.CopyProjectTemplate:input_type -> proto.ProjectRequest
	7,  // 19: proto.ProjectService.NodeList:input_type -> proto.ProjectRequest
	7,  // 20: proto.ProjectService.FindProjectByMid:input_type -> proto.ProjectRequest
	2,  // 21: proto.ProjectService.Index:output_type -> proto.IndexResponse
	5,  // 22: proto.ProjectService.FindProjectByMemberId:output_type -> proto.ProjectResponse
	10, // 23: proto.ProjectService.FindProjectTemplate:output_type -> proto.ProjectTemplateResponse
	6,  // 24: proto.ProjectService.CreateProject:output_type -> proto.SaveProjectResponse
	4,  // 25: proto.ProjectService.FindProjectDetail:output_type -> proto.ProjectDetailResponse
	0,  // 26: proto.ProjectService.RecycleProjectByPid:output_type -> proto.IndexMessage
	11, // 27: proto.ProjectService.CollectProjectByType:output_type -> proto.CollectProjectResponse
	13, // 28: proto.ProjectService.EditProject:output_type -> proto.ProjectEditResponse
	15, // 29: proto.ProjectService.GetLogBySelfProject:output_type -> proto.ProjectLogResponse
	16, // 30: proto.ProjectService.CopyProjectTemplate:output_type -> proto.CopyProjectTemplateResponse
	18, // 31: proto.ProjectService.NodeList:output_type -> proto.ProjectNodeResponseMessage
	19, // 32: proto.ProjectService.FindProjectByMid:output_type -> proto.FindProjectByMemberIdResponse
	21, // [21:33] is the sub-list for method output_type
	9,  // [9:21] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_project_service_proto_init() }
func file_project_service_proto_init() {
	if File_project_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_project_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectTemplateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskStages); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectEditRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectEditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectLogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyProjectTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectNodeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectNodeResponseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_project_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindProjectByMemberIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_project_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_project_service_proto_goTypes,
		DependencyIndexes: file_project_service_proto_depIdxs,
		MessageInfos:      file_project_service_proto_msgTypes,
	}.Build()
	File_project_service_proto = out.File
	file_project_service_proto_rawDesc = nil
	file_project_service_proto_goTypes = nil
	file_project_service_proto_depIdxs = nil
}
